cube <- function(x,n) {
x^3
}
cube(3)
cube(3)
x <- 1:10
if (x > 5) [
if (x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h
h
pwd
dir
pollutantmean <- function(directory, pollutant, id = 1:332) {  ## 'directory' is a character vector of length 1 indicating  ## the location of the CSV files    ## 'pollutant' is a character vector of length 1 indicating  ## the name of the pollutant for which we will calculate the  ## mean; either "sulfate" or "nitrate".    ## 'id' is an integer vector indicating the monitor ID numbers  ## to be used    ## Return the mean of the pollutant across all monitors list  ## in the 'id' vector (ignoring NA values)  pollutantData<-data.frame()  for(file in rep(id)){    pollutantData<-rbind(pollutantData,read.table(paste(directory,"/",sprintf("%03d", file),".csv",sep=""),sep=",",header=TRUE))    #head(pollutantData)    #mean(pollutantData[!is.na(pollutantData[pollutant])][pollutant])    #index<-!is.na(pollutantData[pollutant])    #class(pollutantData)    #mean(as.matrix(pollutantData[complete.cases(pollutantData[pollutant]),][pollutant]))  }  mean(as.matrix(pollutantData[pollutant]),na.rm=TRUE)
}
shinyapps::setAccountInfo(name='lwebzem', token='3D0855CBF256FF90BCB689CDD060BDBD', secret='VTG0qFxLtiUHX4mn2H+nDj2JTAHcIQ5YTnW2Xus6')
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
shinyapps::setAccountInfo(name='lwebzem', token='3D0855CBF256FF90BCB689CDD060BDBD', secret='VTG0qFxLtiUHX4mn2H+nDj2JTAHcIQ5YTnW2Xus6')
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='lwebzem', token='3D0855CBF256FF90BCB689CDD060BDBD', secret='VTG0qFxLtiUHX4mn2H+nDj2JTAHcIQ5YTnW2Xus6')
shinyapps::setAccountInfo(name='lwebzem', token='3D0855CBF256FF90BCB689CDD060BDBD', secret='VTG0qFxLtiUHX4mn2H+nDj2JTAHcIQ5YTnW2Xus6')
setwd C:\Users\Owner\Desktop\course2\Shiny\project
setwd C\Users\Owner\Desktop\course2\Shiny\project
setwd C:Users\Owner\Desktop\course2\Shiny\project
setwd Users\Owner\Desktop\course2\Shiny\project
setwd C:/Users/Owner/Desktop/course2/Shiny/project
setwd C://Users//Owner//Desktop//course2//Shiny//project
setwd C:\\Users\\Owner\\Desktop\\course2\\Shiny\\project
setwd (C:\\Users\\Owner\\Desktop\\course2\\Shiny\\project)
setwd (C\\Users\\Owner\\Desktop\\course2\\Shiny\\project)
setwd ("C:\\Users\\Owner\\Desktop\\course2\\Shiny\\project")
runApp
library(shiny)
runApp()
library(shinyapps)
deployApp()
install-github('slidify', 'ramnathv')
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
pwd
swd
author("function_plots")
q()
